//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HiStaffAPI.PortalBusiness {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLog", Namespace="http://schemas.datacontract.org/2004/07/Framework.Data")]
    [System.SerializableAttribute()]
    public partial class UserLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionName {
            get {
                return this.ActionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionNameField, value) != true)) {
                    this.ActionNameField = value;
                    this.RaisePropertyChanged("ActionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fullname {
            get {
                return this.FullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullnameField, value) != true)) {
                    this.FullnameField = value;
                    this.RaisePropertyChanged("Fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNames {
            get {
                return this.GroupNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNamesField, value) != true)) {
                    this.GroupNamesField = value;
                    this.RaisePropertyChanged("GroupNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewDescription {
            get {
                return this.ViewDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewDescriptionField, value) != true)) {
                    this.ViewDescriptionField = value;
                    this.RaisePropertyChanged("ViewDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewGroup {
            get {
                return this.ViewGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewGroupField, value) != true)) {
                    this.ViewGroupField = value;
                    this.RaisePropertyChanged("ViewGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDTO", Namespace="http://schemas.datacontract.org/2004/07/PortalDAL")]
    [System.SerializableAttribute()]
    public partial class EventDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ADD_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CREATED_BYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CREATED_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CREATED_LOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DETAILField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IS_SHOWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MODIFIED_BYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MODIFIED_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MODIFIED_LOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TITLEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ADD_TIME {
            get {
                return this.ADD_TIMEField;
            }
            set {
                if ((this.ADD_TIMEField.Equals(value) != true)) {
                    this.ADD_TIMEField = value;
                    this.RaisePropertyChanged("ADD_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATED_BY {
            get {
                return this.CREATED_BYField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATED_BYField, value) != true)) {
                    this.CREATED_BYField = value;
                    this.RaisePropertyChanged("CREATED_BY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATED_DATE {
            get {
                return this.CREATED_DATEField;
            }
            set {
                if ((this.CREATED_DATEField.Equals(value) != true)) {
                    this.CREATED_DATEField = value;
                    this.RaisePropertyChanged("CREATED_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATED_LOG {
            get {
                return this.CREATED_LOGField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATED_LOGField, value) != true)) {
                    this.CREATED_LOGField = value;
                    this.RaisePropertyChanged("CREATED_LOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DETAIL {
            get {
                return this.DETAILField;
            }
            set {
                if ((object.ReferenceEquals(this.DETAILField, value) != true)) {
                    this.DETAILField = value;
                    this.RaisePropertyChanged("DETAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IS_SHOW {
            get {
                return this.IS_SHOWField;
            }
            set {
                if ((this.IS_SHOWField.Equals(value) != true)) {
                    this.IS_SHOWField = value;
                    this.RaisePropertyChanged("IS_SHOW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODIFIED_BY {
            get {
                return this.MODIFIED_BYField;
            }
            set {
                if ((object.ReferenceEquals(this.MODIFIED_BYField, value) != true)) {
                    this.MODIFIED_BYField = value;
                    this.RaisePropertyChanged("MODIFIED_BY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MODIFIED_DATE {
            get {
                return this.MODIFIED_DATEField;
            }
            set {
                if ((this.MODIFIED_DATEField.Equals(value) != true)) {
                    this.MODIFIED_DATEField = value;
                    this.RaisePropertyChanged("MODIFIED_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODIFIED_LOG {
            get {
                return this.MODIFIED_LOGField;
            }
            set {
                if ((object.ReferenceEquals(this.MODIFIED_LOGField, value) != true)) {
                    this.MODIFIED_LOGField = value;
                    this.RaisePropertyChanged("MODIFIED_LOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TITLE {
            get {
                return this.TITLEField;
            }
            set {
                if ((object.ReferenceEquals(this.TITLEField, value) != true)) {
                    this.TITLEField = value;
                    this.RaisePropertyChanged("TITLE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PortalBusiness.IPortalBusiness")]
    public interface IPortalBusiness {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/TestService", ReplyAction="http://tempuri.org/IPortalBusiness/TestServiceResponse")]
        string TestService(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/TestService", ReplyAction="http://tempuri.org/IPortalBusiness/TestServiceResponse")]
        System.Threading.Tasks.Task<string> TestServiceAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/GetEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/GetEventInformationResponse")]
        HiStaffAPI.PortalBusiness.EventDTO GetEventInformation(HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/GetEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/GetEventInformationResponse")]
        System.Threading.Tasks.Task<HiStaffAPI.PortalBusiness.EventDTO> GetEventInformationAsync(HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/GetListEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/GetListEventInformationResponse")]
        System.Collections.Generic.List<HiStaffAPI.PortalBusiness.EventDTO> GetListEventInformation(HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/GetListEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/GetListEventInformationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HiStaffAPI.PortalBusiness.EventDTO>> GetListEventInformationAsync(HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/InsertEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/InsertEventInformationResponse")]
        bool InsertEventInformation(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/InsertEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/InsertEventInformationResponse")]
        System.Threading.Tasks.Task<bool> InsertEventInformationAsync(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/UpdateEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/UpdateEventInformationResponse")]
        bool UpdateEventInformation(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/UpdateEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/UpdateEventInformationResponse")]
        System.Threading.Tasks.Task<bool> UpdateEventInformationAsync(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/DeleteEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/DeleteEventInformationResponse")]
        bool DeleteEventInformation(System.Collections.Generic.List<decimal> _listId, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/DeleteEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/DeleteEventInformationResponse")]
        System.Threading.Tasks.Task<bool> DeleteEventInformationAsync(System.Collections.Generic.List<decimal> _listId, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/ActiveEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/ActiveEventInformationResponse")]
        bool ActiveEventInformation(decimal _id, HiStaffAPI.PortalBusiness.UserLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalBusiness/ActiveEventInformation", ReplyAction="http://tempuri.org/IPortalBusiness/ActiveEventInformationResponse")]
        System.Threading.Tasks.Task<bool> ActiveEventInformationAsync(decimal _id, HiStaffAPI.PortalBusiness.UserLog log);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPortalBusinessChannel : HiStaffAPI.PortalBusiness.IPortalBusiness, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PortalBusinessClient : System.ServiceModel.ClientBase<HiStaffAPI.PortalBusiness.IPortalBusiness>, HiStaffAPI.PortalBusiness.IPortalBusiness {
        
        public PortalBusinessClient() {
        }
        
        public PortalBusinessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PortalBusinessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalBusinessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalBusinessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TestService(string str) {
            return base.Channel.TestService(str);
        }
        
        public System.Threading.Tasks.Task<string> TestServiceAsync(string str) {
            return base.Channel.TestServiceAsync(str);
        }
        
        public HiStaffAPI.PortalBusiness.EventDTO GetEventInformation(HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.GetEventInformation(log);
        }
        
        public System.Threading.Tasks.Task<HiStaffAPI.PortalBusiness.EventDTO> GetEventInformationAsync(HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.GetEventInformationAsync(log);
        }
        
        public System.Collections.Generic.List<HiStaffAPI.PortalBusiness.EventDTO> GetListEventInformation(HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.GetListEventInformation(log);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HiStaffAPI.PortalBusiness.EventDTO>> GetListEventInformationAsync(HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.GetListEventInformationAsync(log);
        }
        
        public bool InsertEventInformation(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.InsertEventInformation(_event, log);
        }
        
        public System.Threading.Tasks.Task<bool> InsertEventInformationAsync(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.InsertEventInformationAsync(_event, log);
        }
        
        public bool UpdateEventInformation(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.UpdateEventInformation(_event, log);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEventInformationAsync(HiStaffAPI.PortalBusiness.EventDTO _event, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.UpdateEventInformationAsync(_event, log);
        }
        
        public bool DeleteEventInformation(System.Collections.Generic.List<decimal> _listId, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.DeleteEventInformation(_listId, log);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEventInformationAsync(System.Collections.Generic.List<decimal> _listId, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.DeleteEventInformationAsync(_listId, log);
        }
        
        public bool ActiveEventInformation(decimal _id, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.ActiveEventInformation(_id, log);
        }
        
        public System.Threading.Tasks.Task<bool> ActiveEventInformationAsync(decimal _id, HiStaffAPI.PortalBusiness.UserLog log) {
            return base.Channel.ActiveEventInformationAsync(_id, log);
        }
    }
}
